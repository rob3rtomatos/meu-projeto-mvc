trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '18.x'

stages:
  - stage: Install
    displayName: 'Install Dependencies'
    jobs:
      - job: InstallJob
        displayName: 'Install NPM packages'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: |
              npm ci
            displayName: 'Install Dependencies'

          - script: |
              npm list
            displayName: 'List Dependencies'

  - stage: Build
    displayName: 'Build Application'
    dependsOn: Install
    condition: succeeded()
    jobs:
      - job: BuildJob
        displayName: 'Build Next.js'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: |
              npm ci
            displayName: 'Install Dependencies'

          - script: |
              npm run build
            displayName: 'Build Application'

          - script: |
              npm run lint
            displayName: 'Run ESLint'
            continueOnError: true

  - stage: Test
    displayName: 'Run Tests'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: TestJob
        displayName: 'Run Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: |
              npm ci
            displayName: 'Install Dependencies'

          - script: |
              npm run test 2>/dev/null || echo "No tests configured"
            displayName: 'Run Tests'
            continueOnError: true

  - stage: PublishArtifacts
    displayName: 'Publish Artifacts'
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: PublishJob
        displayName: 'Publish Build Artifacts'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(nodeVersion)
            displayName: 'Install Node.js'

          - script: |
              npm ci && npm run build
            displayName: 'Build for Artifacts'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
            displayName: 'Archive Build Artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'build-$(Build.BuildId)'
              publishLocation: 'Container'
            displayName: 'Publish Artifacts'
